# Templates to factorize the service definitions
x-templates:
    worker_base: &worker_base
        build:
            context: services/php
            target: worker
        user: "${USER_ID}:${USER_ID}"
        # Don't use depends_on, it does not work well with docker compose profiles
        volumes:
            - "../..:/var/www:cached"
        profiles:
            - worker

volumes:
    postgres-data: {}
    # # Needed if $XDG_ env vars have been overridden
    # builder-yarn-data: {}

services:
    router:
        build: services/router
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "./services/router/certs:/etc/ssl/certs"
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        networks:
            - default
        profiles:
            - default

    postgres:
        image: postgres:16
        environment:
            - POSTGRES_USER=app
            - POSTGRES_PASSWORD=app
        volumes:
            - postgres-data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5
        profiles:
            - default

    frontend:
        build:
            context: services/php
            target: frontend
        user: "${USER_ID}:${USER_ID}"
        volumes:
            - "../..:/var/www:cached"
            - "../../.home:/home/app:cached"
        depends_on:
            postgres:
                condition: service_healthy
        profiles:
            - default
        labels:
            - "traefik.enable=true"
            - "project-name=${PROJECT_NAME}"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.rule=Host(${PROJECT_DOMAINS})"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.tls=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend-unsecure.rule=Host(${PROJECT_DOMAINS})"
            # Comment the next line to be able to access frontend via HTTP instead of HTTPS
            - "traefik.http.routers.${PROJECT_NAME}-frontend-unsecure.middlewares=redirect-to-https@file"

    # worker_messenger:
    #     <<: *worker_base
    #     command: php -d memory_limit=1G /var/www/application/bin/console messenger:consume async --memory-limit=128M

    builder:
        build:
            context: services/php
            target: builder
        init: true
        user: "${USER_ID}:${USER_ID}"
        environment:
            # The following list contains the common environment variables exposed by CI platforms
            - GITHUB_ACTIONS
            - CI # Travis CI, CircleCI, Cirrus CI, Gitlab CI, Appveyor, CodeShip, dsari
            - CONTINUOUS_INTEGRATION # Travis CI, Cirrus CI
            - BUILD_NUMBER # Jenkins, TeamCity
            - RUN_ID # TaskCluster, dsari
        volumes:
            - "../..:/var/www:cached"
            - "../../.home:/home/app:cached"
            # Needed when $XDG_ env vars have overridden, to persist the yarn
            # cache between builder and watcher, adapt according to the location
            # of $XDG_DATA_HOME
            # - "builder-yarn-data:/data/yarn"
        depends_on:
            - postgres
        profiles:
            - builder
