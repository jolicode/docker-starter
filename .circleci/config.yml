version: 2

jobs:
    check-python-cs:
        docker:
            - image: circleci/python:3.7
        steps:
            - checkout
            - run: sudo pip install pycodestyle
            - run:
                  name: Check cs
                  command: pycodestyle --ignore=E501,W605,E722 invoke.py tasks.py

    tests:
        machine:
            docker_layer_caching: true
            image: ubuntu-1604:201903-01
        working_directory: ~/docker-starter
        steps:
            - checkout
            - run:
                name: Install Requirements
                command: |
                    set -e
                    pip install --upgrade pip
                    pip install --user pipenv
                    ~/.local/bin/pipenv install
            - run:
                name: Install everything
                command: |
                    set -e
                    ~/.local/bin/pipenv run inv start
                    sleep 5
            - run:
                name: Test the infrastructure is working
                command: |
                    set -e
                    set -o pipefail
                    curl --fail --insecure --silent -H "Host: app.test" https://127.0.0.1 | grep "Hello world"
            - run:
                name: Test communication with DB
                command: |
                    set -e
                    set -o pipefail

                    # Need to mount (replace the old one) the new directories layout to the web container
                    ~/.local/bin/pipenv run inv up

                    cat > application/public/index.php <<'EOPHP'
                    <?php
                    $pdo = new PDO('pgsql:host=postgres;dbname=app', 'app', 'app');
                    $pdo->exec('CREATE TABLE test (id integer NOT NULL)');
                    $pdo->exec('INSERT INTO test VALUES (1)');
                    echo $pdo->query('SELECT * from test')->fetchAll() ? 'database OK' : 'database KO';
                    EOPHP

                    curl --fail --insecure --silent -H "Host: app.test" https://127.0.0.1 | grep "database OK"

workflows:
    version: 2
    check_and_tests:
        jobs:
            - check-python-cs
            - tests
